{"ast":null,"code":"import _objectSpread from \"/workspaces/JobPortal/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/workspaces/JobPortal/src/CompanyLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { UserContext } from './UserContext';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./CompanyLogin.css\";\nimport { api } from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyLogin() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setEmail(credentials.email);\n      await fetch(\"\".concat(api, \"/company/login\"), {\n        method: \"POST\",\n        header: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      const email = credentials.email;\n      navigate(\"/JobsDashboard\", {\n        state: {\n          email\n        }\n      });\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n  const {\n    email,\n    setEmail\n  } = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: credentials.email,\n        onChange: e => setCredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n          email: e.target.value\n        })),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: credentials.password,\n        onChange: e => setCredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n          password: e.target.value\n        })),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/CompForgotPassword\",\n      children: \"Forgot Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CompanyLogin, \"L86feCpDi48qHakrc7NPFB1wDEk=\", false, function () {\n  return [useNavigate];\n});\n_c = CompanyLogin;\nexport default CompanyLogin;\nvar _c;\n$RefreshReg$(_c, \"CompanyLogin\");","map":{"version":3,"names":["React","useState","useContext","UserContext","useNavigate","Link","api","jsxDEV","_jsxDEV","CompanyLogin","_s","credentials","setCredentials","email","password","navigate","handleSubmit","e","preventDefault","setEmail","fetch","concat","method","header","body","JSON","stringify","state","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","_objectSpread","target","required","to","_c","$RefreshReg$"],"sources":["/workspaces/JobPortal/src/CompanyLogin.js"],"sourcesContent":["import React, { useState , useContext } from \"react\";\n\nimport { UserContext } from './UserContext';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./CompanyLogin.css\";\nimport { api } from \"./App\";\nfunction CompanyLogin() {\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setEmail(credentials.email);\n      await fetch(`${api}/company/login`, {\n        method: \"POST\",\n        header: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(credentials),\n      });\n      const email = credentials.email;\n      navigate(\"/JobsDashboard\", { state: { email } });\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n  const { email, setEmail } = useContext(UserContext);\n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={credentials.email}\n          onChange={(e) =>\n            setCredentials({ ...credentials, email: e.target.value })\n          }\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={(e) =>\n            setCredentials({ ...credentials, password: e.target.value })\n          }\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n\n      <Link to=\"/CompForgotPassword\">Forgot Password?</Link>\n    </div>\n  );\n}\n\nexport default CompanyLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}