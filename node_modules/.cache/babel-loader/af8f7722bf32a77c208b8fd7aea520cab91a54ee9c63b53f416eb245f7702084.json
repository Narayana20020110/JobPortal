{"ast":null,"code":"var _jsxFileName = \"/workspaces/JobPortal/src/JobsDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { api } from \"./App\";\nimport { UserContext } from './userContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsDashboard = profiles => {\n  _s();\n  const [Jobs, setJobs] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    email\n  } = useContext(UserContext);\n  console.log(email);\n  useEffect(async () => {\n    await fetch(\"\".concat(api, \"/jobs-dashboard/\").concat(email)).then(res => res.json()).then(data => setJobs(data));\n  }, []);\n  const handlePostJob = () => {\n    navigate(\"/PostJob\");\n  };\n  const handleMatchedProfiles = () => {\n    navigate(\"/MatchedProfiles\", {\n      state: {\n        Jobs\n      }\n    });\n  };\n  const closeJob = async jobId => {\n    const updatedRows = Jobs.filter(job => job._id != jobId);\n    setJobs([updatedRows]);\n    await fetch(\"\".concat(api, \"/delete/\").concat(jobId), {\n      method: \"DELETE\"\n    }).then(() => alert(\"job successfully deleted \"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jobs Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePostJob,\n      children: \"Post Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMatchedProfiles,\n      children: \"Matched Profiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matching Profiles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"t-body\",\n        children: Jobs.map(job => {\n          /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => closeJob(job._id),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, job._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(JobsDashboard, \"dGaA3Vsq0r/SL9dBxHApXisPpy4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = JobsDashboard;\nexport default JobsDashboard;\nvar _c;\n$RefreshReg$(_c, \"JobsDashboard\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","useLocation","api","UserContext","jsxDEV","_jsxDEV","JobsDashboard","profiles","_s","Jobs","setJobs","navigate","location","email","console","log","fetch","concat","then","res","json","data","handlePostJob","handleMatchedProfiles","state","closeJob","jobId","updatedRows","filter","job","_id","method","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","id","map","jobTitle","_c","$RefreshReg$"],"sources":["/workspaces/JobPortal/src/JobsDashboard.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { api } from \"./App\";\n\nimport { UserContext } from './userContext';\nconst JobsDashboard =  (profiles) => {\n  const [Jobs, setJobs] = useState([]);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  const { email } = useContext(UserContext);\n console.log(email);\n  useEffect(\n   async () => {\n    \n     \n     \n  \n    \n      \n\n \n    \n   \n\n    \n     \n    \n\n   \n  \n\n\n\n\n   \n  \n  \n  \n  \n    \n    \n     \n  \n\n\n\n\n \n\n \n  \n \n\n  \n \n    \n     \n\n    \n       \n       \n\n       \n\n      \n      \n      \n\n    \n     \n\n\n  \n        \n\n\n\n\n\n\n\n\n\n  await fetch(`${api}/jobs-dashboard/${email}`).then((res)=>res.json()).then((data) => setJobs(data));\n},[]);\n  const handlePostJob = () => {\n    navigate(\"/PostJob\");\n  };\n  const handleMatchedProfiles = () => {\n    navigate(\"/MatchedProfiles\", { state: { Jobs } });\n  };\n  const closeJob = async (jobId) => {\n    const updatedRows = Jobs.filter((job) => job._id != jobId);\n    setJobs([updatedRows]);\n    await fetch(`${api}/delete/${jobId}`, { method: \"DELETE\" }).then(() =>\n      alert(\"job successfully deleted \")\n    );\n  };\n  return (\n    <div>\n      <h1>Jobs Dashboard</h1>\n      <button onClick={handlePostJob}>Post Job</button>\n      <button onClick={handleMatchedProfiles}>Matched Profiles</button>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Job ID</th>\n            <th>Job Title</th>\n            <th>Status</th>\n            <th>Matching Profiles</th>\n          </tr>\n        </thead>\n        <tbody id=\"t-body\">\n          {Jobs.map((job) => {\n            <tr key={job._id}>\n              <td>{job._id}</td>\n              <td>{job.jobTitle}</td>\n              <td>\n                <button onClick={() => closeJob(job._id)}>Close</button>\n              </td>\n           \n              \n                \n                  \n                  \n           \n            </tr>\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default JobsDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}